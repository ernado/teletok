// Code generated by ogen, DO NOT EDIT.

package oas

// Ref: #/components/schemas/Data
type Data struct {
	AnalyzeTime               OptString               "json:\"analyze_time\""
	APIURL                    OptString               "json:\"api_url\""
	NwmVideoURL               OptString               "json:\"nwm_video_url\""
	OriginalURL               OptString               "json:\"original_url\""
	Platform                  OptString               "json:\"platform\""
	Status                    string                  "json:\"status\""
	URLType                   OptString               "json:\"url_type\""
	VideoAuthorDiggCount      OptFloat64              "json:\"video_author_diggCount\""
	VideoAuthorFollowerCount  OptFloat64              "json:\"video_author_followerCount\""
	VideoAuthorFollowingCount OptFloat64              "json:\"video_author_followingCount\""
	VideoAuthorHeartCount     OptFloat64              "json:\"video_author_heartCount\""
	VideoAuthorID             OptString               "json:\"video_author_id\""
	VideoAuthorNickname       OptString               "json:\"video_author_nickname\""
	VideoAuthorVideoCount     OptFloat64              "json:\"video_author_videoCount\""
	VideoAwemeID              OptString               "json:\"video_aweme_id\""
	VideoCommentCount         OptFloat64              "json:\"video_comment_count\""
	VideoCover                OptString               "json:\"video_cover\""
	VideoCreateTime           OptFloat64              "json:\"video_create_time\""
	VideoDiggCount            OptFloat64              "json:\"video_digg_count\""
	VideoDownloadCount        OptFloat64              "json:\"video_download_count\""
	VideoDynamicCover         OptString               "json:\"video_dynamic_cover\""
	VideoHashtags             []DataVideoHashtagsItem "json:\"video_hashtags\""
	VideoMusicAuthor          OptString               "json:\"video_music_author\""
	VideoMusicID              OptFloat64              "json:\"video_music_id\""
	VideoMusicTitle           OptString               "json:\"video_music_title\""
	VideoMusicURL             OptString               "json:\"video_music_url\""
	VideoOriginCover          OptString               "json:\"video_origin_cover\""
	VideoPlayCount            OptFloat64              "json:\"video_play_count\""
	VideoShareCount           OptFloat64              "json:\"video_share_count\""
	VideoTitle                OptString               "json:\"video_title\""
	WmVideoURL                OptString               "json:\"wm_video_url\""
}

type DataVideoHashtagsItem struct{}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
